<?php

	/*
	Plugin Name: Email Post Approval
	Description: Ability to review and approve posts for publishing via email.
	Version: 1.0.0
	Author: Travis Lopes
	Author URI: http://travislop.es
	License: GPL2
	*/
		
	// Fire off send email action when a post with the status of "draft" or "pending publishing" is saved.
	add_action('draft_post', 'epa_send_email');
	add_action('pending_post', 'epa_send_email');
	
	function epa_send_email($post_ID){
		// If post is saved via autosave, stop running.
		if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {
			return;
		}
		
		// Get the needed information
		$post_data = get_page($post_ID);
		$post_taxonomies = get_the_taxonomies($post_ID);
		$post_author_email = the_author_meta('user_email', $post_data->post_author);
		$post_hash = epa_generate_hash($post_ID);
		
		// Clean up the taxonomies print out for the email message
		$post_taxonomies['post_tag'] = str_replace('Tags: ', '<b>Tags:</b> ', $post_taxonomies['post_tag']);
		$post_taxonomies['category'] = str_replace('Categories: ', '<b>Categories:</b> ', $post_taxonomies['category']);
		
		// Generate email message
		$message = '<b>Title:</b> '. $post_data->post_title .'<br />';
		$message .= '<b>Post Date: </b> '. $post_data->post_date .'<br />';
		$message .= $post_taxonomies['post_tag'] .'<br />';
		$message .= $post_taxonomies['category'] .'<br /><br />';
		$message .= $post_data->post_content .'<br /><br />----------------------------------------------------<br />';
		$message .= '<a href="'. get_bloginfo('home') .'/?approve_post=true&approve_key='. $post_hash .'">Approve This Post</a><br />This email generated by the Email Post Approval plugin.';
		
		// Add author's email as the reply-to email, set HTML header and send email.
		$headers[] = 'Reply-To: '. $post_author_email;
		add_filter('wp_mail_content_type', create_function('', 'return "text/html";'));
		wp_mail(get_bloginfo('admin_email'), 'Post Needing Approval: '. $post_data->post_title, $message, $headers);
	}
	
	// Generate hash for the post 
	function epa_generate_hash($post_ID) {
		// Check to see if there is already a hash
		$existing_hash = get_post_meta($post_ID, '_epa-approve_key', true);
		if($existing_hash) {
			return $existing_hash;
		}
		
		// Otherwise, generate and return a hash
		$hash = sha1($post_ID*time());
		add_post_meta($post_ID, '_epa-approve_key', $hash);
		return $hash;
	}
	
	// If URL includes "approve_post" argument, check the key and approve post if key exists.
	if($_GET['approve_post']){
		$get_post_to_approve = get_posts('posts_per_page=1&post_status=any&meta_key=_epa-approve_key&meta_value='. $_GET['approve_key']);
		
		// If key exists, publish post, delete key, and redirect to published post.
		if($get_post_to_approve){
			wp_publish_post($get_post_to_approve[0]->ID);
			delete_post_meta($get_post_to_approve[0]->ID, '_epa-approve_key');
			header('Location: '. get_permalink($get_post_to_approve[0]->ID));
		// If key doesn't exist, display an alert saying post is not found.
		} else {
			echo '<script>alert(\'The post you are attempting to approve is not found.\');</script>';
		}
	}
	
